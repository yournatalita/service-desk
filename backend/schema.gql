# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

type Project {
  id: ID!
  name: String!
  code: String!
  onCreated: DateTime!
  onUpdated: DateTime!
  description: String!
  accentColor: String!
  tasks(filter: FilterDto): TasksList!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterDto {
  sortName: String
  sortDirection: String
  take: Int
  skip: Int
  projectId: Int
  status: String
  statusState: String
}

type User {
  id: ID!
  externalId: ID!
  onCreated: DateTime!
  onUpdated: DateTime!
  createdTasks: [Task!]!
  assignedTasks: [Task!]!
}

type Task {
  id: ID!
  title: String!
  description: String
  onCreated: DateTime!
  onUpdated: DateTime!
  project: Project!
  creatorUser: User!
  assignedToUser: User!
  status: String!
}

type TasksList {
  list: [Task!]!
  total: Float!
}

type Query {
  tasks(filter: FilterDto!): TasksList!
  task(id: Int!): Task!
  projects: [Project!]!
  project(id: Int!): Project!
  users(filter: FilterUsersDto!): [User!]!
  user(id: Int!): User!
}

input FilterUsersDto {
  sortName: String
  sortDirection: String
  take: Int
  skip: Int
}

type Mutation {
  createTask(createTaskInput: CreateTaskDto!): Task!
  editTask(editTaskInput: EditTaskDto!): Task!
  createProject(createProjectInput: CreateProjectDto!): Project!
  editProject(editProjectInput: EditProjectDto!): Project!
  editUser(editUser: EditUserDto!): User!
}

input CreateTaskDto {
  title: String!
  description: String
  projectId: Float!
}

input EditTaskDto {
  id: Float!
  title: String!
  description: String
  status: String
}

input CreateProjectDto {
  name: String!
  code: String!
  description: String
}

input EditProjectDto {
  id: ID
  name: String
  code: String
  description: String
}

input EditUserDto {
  externalId: String!
}

type Subscription {
  taskCreated: Task!
  projectCreated: Project!
  userCreated: User!
}
