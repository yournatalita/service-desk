type Query {
  tasks(filter: FilterTask): TasksList
  task(id: Int!): Task
}

type Mutation {
  createTask(createTaskInput: CreateTaskInput): Task
  editTask(editTaskInput: EditTaskInput): Task
}
type Subscription {
  taskCreated: Task
  taskEdited: Task
}

scalar DateTime
scalar Date

type Task {
  id: Int!
  title: String!
  description: String!
  onCreated: DateTime!
  onUpdated: DateTime!
}

type TasksList {
  list: [Task]
  total: Int
}

"""
Inputs
"""
input CreateTaskInput {
  title: String!
  description: String!
}

input FilterTask {
  id: Int
  sortName: String
  sortDirection: String
  skip: Int
  take: Int
}

input EditTaskInput {
  id: Int!
  title: String!
  description: String!
}
